// BLOCKS
public void DoMagic()
{
	// This will remain.
}
public class Foo
{
	public void Bar()
	{
		// This will remain.
	}
}

// LINES
var target = Argument("target", "Build");
Task("Build")
    .Does(() =>
{
	// This will remain.
});
while(true)
{
	if(false)
	{
		break;
	}
}
if(true)
	foo++;
else if(false)
	bar++;
else
	baz++;
Task("Publish")
    .IsDependentOn("Build")
    .Does(() =>
{
});
if(true)
{
	// Do something
}
else if(false)
{
	// Do something else
}
else
{
	// Not sure really...
}
RunTarget(target);
switch(a)
{
	case 1: return 0;
	default: return 1;
}